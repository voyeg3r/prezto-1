#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Customize to your needs...
export EDITOR=vim

alias macvim="open -a MacVim"
alias l="ls -lh"
alias lsg="ls | grep "
alias lslg="ls -a | grep "
alias lg="ls -lh | grep "

# remove rm -i to avoid useless confirm.
alias rm="nocorrect rm"

# Automatic open
alias -s pdf=open
alias -s txt=vim
alias -s java=vim
alias -s js=vim
alias -s html=vim
alias -s tex=vim
alias -s bib=vim

# for hadoop
alias hfs="hadoop fs "
alias hfls="hadoop fs -ls"
alias hfrm="hadoop fs -rm"
alias hfcat="hadoop fs -cat"
alias hjar="hadoop jar"

# for git
alias gph="git push github"
alias gss="git status -s"
alias gcma="git commit -am"
alias gcmm="git commit -m"
alias gpll="git pull github"
alias gpllo="git pull origin"
alias gdiff="git --no-pager diff"
alias glog="git --no-pager log"
alias gck="git checkout"
alias grsh="git reset --hard"
alias grss="git reset --soft"

# for Android develop
alias ashell="adb shell"
alias alog="adb logcat"
alias alc="adb logcat -c"
alias als="adb logcat -s"
alias ainstall="adb install -r"
alias auninstall="adb uninstall"
alias apull="adb pull"
alias areboot="adb reboot"
alias aflashall="fastboot flashall -w"
alias aflash="fastboot flashall"

# filetree
alias filetree="ls -R | grep ":$" | sed -e 's/:$//' -e 's/[^-][^\/]*\//--/g' -e 's/^/ /' -e 's/-/|/'"

# for Preview open pdf
alias o="open -a Preview"

# for OS161 CSE 521
alias db="cd ~/root && mips-harvard-os161-gdb kernel"

# for Emacs and EmacsClient
alias ec="emacsclient -n"
# alias emacs="/Applications/Emacs.app/Contents/MacOS/bin/emacsclient --alternate-editor=/Applications/Emacs.app/Contents/MacOS/Emacs"
# ec()
# {
# /Applications/Emacs.app/Contents/MacOS/bin/emacsclient --alternate-editor=/Applications/Emacs.app/Contents/MacOS/Emacs -n "$*"
# }
# [ -f /Applications/Emacs.app/Contents/MacOS/Emacs ] && alias emacsclient="/usr/local/bin/emacsclient" && alias ec=emacsclient
# [ -f /Applications/Emacs.app/Contents/MacOS/Emacs ] && alias emacs="/Applications/Emacs.app/Contents/MacOS/Emacs -nw" && alias emacsclient="/usr/local/bin/emacsclient" && alias ec=emacsclient
export ALTERNATE_EDITOR="vim"
# [ -f /Applications/Emacs.app/Contents/MacOS/Emacs ] && echo "File exists" || echo "File does not exists"


# Autojump
[[ -s ~/.autojump/etc/profile.d/autojump.zsh ]] && . ~/.autojump/etc/profile.d/autojump.zsh

export GROOVY_HOME=/usr/local/opt/groovy/libexec

# Path for Shell script
export PATH=~/Dropbox/Software/MacHome/Shell_script:$PATH
export PATH=~/Dropbox/Software/MacHome/Shell_script/os161:$PATH

# Path for Emacs
export PATH=/Applications/Emacs.app/Contents/MacOS:$PATH
export PATH=/Applications/Emacs.app/Contents/MacOS/bin:$PATH

# Path for /usr/local/bin
export PATH=/usr/local/bin:$PATH

# add current directory to PATH
export PATH=.:$PATH

# Path for bins
export PATH=$PATH:/usr/bin:/bin:/usr/sbin:/sbin:/usr/texbin

# Path for os161
export PATH=$PATH:~/os161/tools/bin

# Path for Matlab
export PATH=$PATH:/Applications/MATLAB_R2014b.app/bin

# Path for Android
export PATH=$PATH:~/sdk-android
export PATH=$PATH:~/SDK-Android/platform-tools
export ANDROID_HOME=~/sdk-android

# CLASSPATH for TLA+
export CLASSPATH=$CLASSPATH:/Users/xcv58/Dropbox/Buffalo/586/tla

# Customize HADOOP
export HADOOP_INSTALL=/Users/xcv58/hadoop
export HADOOP_HOME=$HADOOP_INSTALL
export PATH=$PATH:$HADOOP_INSTALL/bin:$HADOOP_INSTALL/sbin
export HADOOP_MAPRED_HOME=$HADOOP_INSTALL
export HADOOP_COMMON_HOME=$HADOOP_INSTALL
export HADOOP_HDFS_HOME=$HADOOP_INSTALL
export YARN_HOME=$HADOOP_INSTALL

# Set JAVA_HOME
if [[ -d /usr/libexec/java_home ]]
then
   export JAVA_HOME=$(/usr/libexec/java_home)
fi

# For sed error: illegal byte sequence. via http://stackoverflow.com/questions/19242275/re-error-illegal-byte-sequence-on-mac-os-x
export LC_CTYPE=C
export LANG=C

# Fix jekyll "invalid byte sequence in US-ASCII" error
export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8

# for emacs term
if [[ -n ${INSIDE_EMACS} ]]; then
        # This shell runs inside an Emacs *shell*/*term* buffer.
        prompt walters
        unsetopt zle
fi

PATH=$PATH:$HOME/.rvm/bin # Add RVM to PATH for scripting

bindkey -v
bindkey -M viins "^R" history-incremental-pattern-search-backward
bindkey -M vicmd "^R" history-incremental-pattern-search-backward
bindkey -M viins "^S" history-incremental-pattern-search-forward
bindkey -M vicmd "^S" history-incremental-pattern-search-forward
bindkey -M viins "^A" beginning-of-line
bindkey -M vicmd "^A" beginning-of-line
bindkey -M viins "^E" end-of-line
bindkey -M vicmd "^E" end-of-line
bindkey -M viins "^D" delete-char
bindkey -M viins "^H" backward-delete-char
bindkey -M viins "^B" backward-char
bindkey -M viins "^F" forward-char
bindkey -M viins "^U" backward-kill-line
bindkey -M viins "^K" kill-line
bindkey -M vicmd "^K" kill-line
bindkey -M viins "^W" backward-kill-word
bindkey -M vicmd "^W" backward-kill-word
bindkey -M viins "^P" up-line-or-search
bindkey -M viins "^N" down-line-or-search
bindkey -M viins "^V" edit-command-line
bindkey -M viins "^L" xcv58-clear-screen

trapwinch () {
    prepare_first_line
    zle reset-prompt
}

precmd () {
    prompt_xcv58_precmd
    prepare_first_line
}

function xcv58-clear-screen () {
    clear
    prepare_first_line
    zle reset-prompt
}

zle -N xcv58-clear-screen

prepare_first_line () {
    print ""
    print -rP "${_prompt_xcv58_colors[3]}%n%f@${_prompt_xcv58_colors[2]}%m%f in ${_prompt_xcv58_colors[5]}%~%f "'${vcs_info_msg_0_}'
}

vi_mode_indicator () {
    case ${KEYMAP} in
      (vicmd)      echo "%F{red}[% VI]% %r%f" ;;
      (main|viins) echo "" ;;
      (*)          echo "" ;;
    esac
  }

function zle-line-init zle-keymap-select {
    VIM_PROMPT="$(vi_mode_indicator)"
    PS1="${VIM_PROMPT}\$ "
    RPS1=${xcv58_time}
    RPS1="${${KEYMAP/vicmd/$VIM_PROMPT}/(main|viins)/}  $EPS1${RPS1}"
    zle reset-prompt
}

zle -N zle-line-init
zle -N zle-keymap-select
